#!/usr/bin/env python

import telnetlib

class LoggingTelnet(telnetlib.Telnet):
    EOL = '\r\n'

    def __init__(self, f, host=None, port=0):
        self._logdata = f
        telnetlib.Telnet.__init__(self, host, port)

    def _log(self, data):
        self._logdata.write(data.replace('\r', ''))

    def write(self, b):
        b = b.strip()
        telnetlib.Telnet.write(self, b + self.EOL)
        self._log('<%{0}%>\n'.format(b))

    def read_eager(self):
        data = telnetlib.Telnet.read_eager(self)
        self._log(data)
        return data


if __name__ == '__main__':
    import argparse, logging, sys

    parser = argparse.ArgumentParser(description="Capture telnet interactions")
    parser.add_argument('host', help="Host to connect to")
    parser.add_argument('port', type=int, default=23, help='Listening port')
    parser.add_argument('--filename', '-f', default='telnet.dump', help="File to log interactions to")
    parser.add_argument('--port', '-p', type=int, default=23, help='Listening port')
    parser.add_argument('--verbose', '-v', action='store_true', help='Verbose output')
    options = parser.parse_args()

    logging.basicConfig(stream=sys.stderr, level=logging.DEBUG if options.verbose else logging.INFO)

    c = LoggingTelnet(open(options.filename, 'w'), options.host, options.port)
    c.interact()
    c.close()
